var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"/docs/vscode/debug/",title:"不会 Debug 还做什么开发",description:"VSCode 扩展分享，debug 扩展推荐",content:"不会 Debug 还做什么开发，试试下面几个 Debug 神器。\nCode Runner #  项目地址: https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\n 这是小欧近期学习C++时发现的，可运行多种语言的代码片段，如 C, C++, Java, JavaScript, PHP, Python,, Go, Lua, Groovy, PowerShell, BAT/CMD, BASH/SH,, Visual Basic .NET, Clojure, Haxe, Objective-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart\u0026hellip;\u0026hellip;\n使用方法非常简单，光标在需要 debug 的文件中，然后 control+option+N，就可以 run code 啦！效果如图：（PS：你也可以自行定义命令。没错， \u0026ndash;std=c++11 就是小欧自定义的）\n"}),a.add({id:1,href:"/docs/vscode/%E6%91%B8%E9%B1%BC%E7%A5%9E%E5%99%A8/",title:"摸 🐟 鱼？不存在的",description:"VSCode 扩展分享，VSCode 摸鱼神器",content:"本期推荐 VSCode 放（摸）松（🐟）神器，上班和学习一样，要劳逸结合的哦 👍\n小霸王 #  项目地址: https://marketplace.visualstudio.com/items?itemName=gamedilong.anes\n 小霸王是一款基于vscode的nes游戏插件，能让你在紧张的开发之余在vscode里放松身心。选择想要玩的游戏，右键菜单下载。下载完成后，会加载到local菜单。点击即可完。 小霸王\u0026mdash;\u0026ndash;其乐无穷！！！但要记得戴耳机或者关闭外音哦！别问我是怎么知道的。。。\n韭菜盒子 #  项目地址: https://marketplace.visualstudio.com/items?itemName=giscafer.leek-fund\n VSCode 里也可以看股票 \u0026amp; 基金 \u0026amp; 期货实时数据，投资有风险，入市需谨慎！ ⏰s\n小欧并不建议初入股市的朋友打开实时查看，会三心二意的，bug连篇的。。。。。。\nCloudmusic #  项目地址: https://marketplace.visualstudio.com/items?itemName=yxl.cloudmusic\n 网易云音乐插件，功能还蛮丰富的，直接登录账号即可，会同步歌单播客等信息，效果如图。（代码和音乐真的很配哦 💯 ）\nz-reader #  项目地址:https://marketplace.visualstudio.com/items?itemName=aooiu.z-reader\n 用来摸鱼或学习的小说阅读插件，支持在线搜索笔趣阁起点等，也支持本地阅读，支持 txt 和 epub 格式，效果如图。\nNBA real-time score #  项目地址: https://marketplace.visualstudio.com/items?itemName=liyangjj.NBARealTimeScore\n 实时获取当天NBA比赛比分，并显示在vscode下方状态栏左侧；更可以观看实时文字直播，以及赛后数据统计。让你实现边 coding 边关注NBA。\n鼓励师系列 # 这个不过多介绍，可自行搜索。\n 摸鱼不可耻，但要适当哈! 🧑\n"}),a.add({id:2,href:"/docs/tool/markdown/",title:"Markdown 编辑器",description:"markdown 编辑器",content:"Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。\nTypora #  项目地址：https://www.typora.io/\n 相信在收费之前， Typora 的用户应该大有人在，小欧周边就有很多人在使用。\n我也曾是重度用户，文档基本都是 Typora + Github，使用感受相当舒适。\n优点：\n 主题多，界面清爽 支持 pdf、html、image 导出（话说小欧的简历就是通过 Typora 的 Orangeheart 主题修改后制作的） 支持插入图片保存特定目录  缺点：\n 开始收费  Obsdian #  项目地址：https://obsidian.md/\n Obsdian 是去年同事推荐给我的，功能十分强大，但是语法稍微有点不一样，可以通过配置去修改。\n优点：\n 双链强大炫酷 免费 社区开放  缺点：\n 每个项目都要单独设置外观主题，繁琐  有道云笔记 #  项目地址： https://note.youdao.com/\n 有道云笔记在很早的时候就支持 Markdown 了，而且支持多端，这个非常好，在前几年使用频率较高，但是windows版本软件时常出现卡死情况，一度只使用网页版本。\n优点：\n 多端云存储 依托有道云，功能不仅限于Markdown 可直接分享网页给朋友  缺点：\n 不开会员有广告 卡顿（曾经，近期使用频率不高）  作业部落 #  项目地址： https://www.zybuluo.com/\n 这是最早接触 Markdown 时使用的，应该至少2年没用过了，刚尝试登录了一下，发现还有80多篇文档。\n这有点惊到我了，必须给站长点赞。\n优点：\n 纯网页端，无需单独安装（也支持客户端了，难道是我曾经一直没发现😓） 支持标签分类  缺点：\n 上传本地文件需要升级至高级会员，查看详情  VSCode #  项目地址： https://code.visualstudio.com/\n 这是我写文章正在使用的，装了 Markdown All in One、Markdown Preview Enhanced 等扩展，对于 VSCode 重度使用者相当巴适，要啥自行车。\nPS：VSCode 貌似对各种语言支持越来越强，对于重度使用者来说，倒是非常不错的信息。\n优点：\n 依托于 VSCode，扩展众多  缺点：\n 导出功能较弱   以上是小欧自己深度使用过的 Markdown 编辑器，优缺点等言论也仅限于个人使用体验，仅供参考。如果你有其他好用的 Markdown 编辑器，不妨再评论区留言，分享给大家。\n"}),a.add({id:3,href:"/docs/vscode/%E5%A4%9A%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/",title:"多项目切换必备",description:"VSCode 扩展分享，多项目切换必备",content:"项目多了，需要经常切换，但自带的历史记录操作繁琐怎么办？\n不妨试试下面这几个扩展。\nProject Manager #  项目地址: https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager\n 不知道大家在实际工作中，是否像小欧一样需要在多个项目间反复横跳。如果是这样，并觉得 VSCode 的下方历史项目操作起来略显繁琐，那么 project manager 绝对值得一试。\n安装完成后，左侧会有快捷选项卡，方便！！！可以点击上方修改图标自行配置，比如我的:​\n[ { \u0026quot;name\u0026quot;: \u0026quot;go-learning\u0026quot;, \u0026quot;rootPath\u0026quot;: \u0026quot;/Users/sai/Documents/github/go-learning\u0026quot;, \u0026quot;paths\u0026quot;: [], \u0026quot;tags\u0026quot;: [], \u0026quot;enabled\u0026quot;: true }, { \u0026quot;name\u0026quot;: \u0026quot;go-example\u0026quot;, \u0026quot;rootPath\u0026quot;: \u0026quot;/Users/sai/Documents/github/go-example\u0026quot;, \u0026quot;paths\u0026quot;: [], \u0026quot;tags\u0026quot;: [], \u0026quot;enabled\u0026quot;: true }, { \u0026quot;name\u0026quot;: \u0026quot;rust-learning\u0026quot;, \u0026quot;rootPath\u0026quot;: \u0026quot;/Users/sai/Documents/github/rust-learning\u0026quot;, \u0026quot;paths\u0026quot;: [], \u0026quot;tags\u0026quot;: [], \u0026quot;enabled\u0026quot;: true }, { \u0026quot;name\u0026quot;: \u0026quot;cpp-learning\u0026quot;, \u0026quot;rootPath\u0026quot;: \u0026quot;/Users/sai/Documents/github/cpp-learning\u0026quot;, \u0026quot;paths\u0026quot;: [], \u0026quot;tags\u0026quot;: [], \u0026quot;enabled\u0026quot;: true }, { \u0026quot;name\u0026quot;: \u0026quot;imgo\u0026quot;, \u0026quot;rootPath\u0026quot;: \u0026quot;/Users/sai/Documents/github/imgo\u0026quot;, \u0026quot;paths\u0026quot;: [], \u0026quot;tags\u0026quot;: [], \u0026quot;enabled\u0026quot;: true } ]  不仅如此，你还可以设置tag，项目太多时方便不同标记查看。\nProject Dashboard #  项目地址: https://marketplace.visualstudio.com/items?itemName=kruemelkatze.vscode-dashboard\n 这也是个多项目管理的软件，可以设置不同的group，不同的颜色，还可以拖动项目更换group。操作简单，就不细说，效果如图： "}),a.add({id:4,href:"/docs/vscode/tips/",title:"记得备注，回来修改",description:"VSCode 扩展分享，多项目切换必备",content:"“冰冻三尺，非一日之寒”。很多时候，coding 是不能一蹴而就的，当你没有完成时，不妨使用备注来做标记，防止遗忘。\nTODO Tree # 地址： https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree\nTODO Tree 可以很方便地显示当前项目中所有的TODO所在的文件及位置，注意是大写的TODO哦，效果如图：（左侧也是有个选项卡快捷入口的）\n"}),a.add({id:5,href:"/docs/vscode/%E7%BE%8E%E5%8C%96/",title:"颜值扩展",description:"VSCode 扩展分享，颜值党",content:"本期推荐几个颜值扩展，无关乎语言层面，IDE 看得舒适，coding 更快。\nvscode-icons #  项目地址: https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons\n 这个插件会根据文件后缀、名称显示不同的 icons，颜值颇高，设置后看着各种小图标心情舒畅，颜值党值得一试，如下图。（也可以自己设置喜欢的图标主题，扩展栏搜索 tag:icon-theme 安装你喜欢的即可）\nBetter Comments #  项目地址: https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments\n 美化注释必选，可以通过第一个字符区分不同的注释，也可以自定义，@和diy都是小欧自定义的，不同颜色也更方便区分不同级别的注释，好看又实用。\nindent-rainbow #  项目地址: https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow\n 让缩进不再冰冷，项彩虹🌈一样绚烂。\n我的颜色配置如下，效果\n{ ... \u0026quot;indentRainbow.colorOnWhiteSpaceOnly\u0026quot;: false, \u0026quot;indentRainbow.colors\u0026quot;: [ \u0026quot;rgba(255,255,60,0.7)\u0026quot;, \u0026quot;rgba(127,255,127,0.7)\u0026quot;, \u0026quot;rgba(255,127,255,0.7)\u0026quot;, \u0026quot;rgba(60 90 170,0.4)\u0026quot; ], \u0026quot;indentRainbow.ignoreErrorLanguages\u0026quot;: [ \u0026quot;markdown\u0026quot; ], \u0026quot;indentRainbow.excludedLanguages\u0026quot;: [ \u0026quot;plaintext\u0026quot; ], \u0026quot;indentRainbow.includedLanguages\u0026quot;: [ ], \u0026quot;indentRainbow.indicatorStyle\u0026quot;: \u0026quot;light\u0026quot;, .... }  效果如图: 简体中文 #  项目地址: https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans\n 适用于 VS Code 的中文（简体）语言包，无需多言。\nBetter Align #  项目地址: https://marketplace.visualstudio.com/items?itemName=wwm.better-align\n 用冒号（ ）、:赋值（、、、、、）和箭头（ ）对齐你的代码。它对逗号优先的编码样式和尾随注释有额外的支持=+=-=*=/==\u0026gt;\n需要注意的是，扩展没有内置快捷方式，您必须自己添加快捷键。\n比如：\n{ \u0026quot;key\u0026quot; : \u0026quot;ctrl+cmd+=\u0026quot;, \u0026quot;command\u0026quot;: \u0026quot;wwm.aligncode\u0026quot;, \u0026quot;when\u0026quot; : \u0026quot;editorTextFocus \u0026amp;\u0026amp; !editorReadonly\u0026quot; }  选择需要对其的代码，输入快捷键 ctrl+cmd+= ，即可看到效果(线上面的是格式过得，下面是未格式化的)。\nPower Mode #  项目地址: https://marketplace.visualstudio.com/items?itemName=hoovercj.vscode-power-mode\n 这个安装后默认是不开启的，需要去配置enable一下，效果我就不贴了，插件项目地址页面有，可自行尝试，有点炫酷。（我比较喜欢Flame） 🔥🔥🔥🔥🔥🔥\n 还有像 Bracket Pair Colorizer2 美化括号的如今的vscode 内置了，无需安装，更新下版本即可，我就不介绍了。\n颜值党的你是否有其他扩展推荐呢？不妨在评论区留言，分享给大家吧！\n"}),a.add({id:6,href:"/docs/tool/tool/",title:"工具分享",description:"工具分享",content:""}),a.add({id:7,href:"/docs/vscode/git%E6%8F%92%E4%BB%B6/",title:"Git 插件",description:"VSCode 扩展分享，VSCode Git 插件",content:"Git 想必在大家伙的日常开发中是必不可少的，本期给大家推荐几个 git 相关插件，希望能提高你的开发效率。\ngitigone #  项目地址: https://marketplace.visualstudio.com/items?itemName=codezombiech.gitignore\n 如果你觉得写 gitigone 是个烦人的事情，那么你可以试试，安装后command+shift+P打开，就贸易选择 add gitigone 了。\n选择后具体语言后就会生成gitignore 文件啦。 Git History #  项目地址: https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory\n 在某个文件里直接点击右键，就可以查看当前你文件的 git 历史了，相当方便。\nGit Graph #  项目地址: https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph\n 安装完成后左下角有快捷菜单，点击后看查看自己的 git 提交，如图：\n可点击查看单词 commit 的明细：\ngithub #  项目地址: https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github\n 这个算是针对 github 的扩展，可以快捷的插件 github PR，操作课件如下图。  目前小欧用到比较多的是 git history 和 git graph，像其他的 gitlens 等插件使用不多，就不推荐了。\n如果您有其他 git 插件推荐，欢迎在评论区留言分享，感谢您的阅读。\n"}),a.add({id:8,href:"/docs/vscode/",title:"VSCode 扩展",description:"VSCode 扩展分享",content:"VSCode 是小欧目前正在使用的IDE，近几年使用人数增长很快。这些扩展是小欧工作中使用过的，分享给诸位，希望能给你提升一点效率。\n"}),a.add({id:9,href:"/docs/tool/",title:"软件工具篇",description:"开源到，oscome，工具篇",content:"小欧在学习与工作中使用过的软件、工具推荐，观点来源于使用感受，如果你觉得不对，或者用什么不足的，欢迎指出。\n"}),a.add({id:10,href:"/docs/",title:"vscode扩展",description:"vscode插件，vscode扩展，来自开源到",content:"如果您正在使用 VSCode ，那么不妨试试下面这些扩展，有趣又有效。如果你有其他的扩展推荐，也欢迎在评论区分享。\n"}),search.addEventListener('input',b,!0);function b(){var b,e;const d=5;b=this.value,e=a.search(b,{limit:d,enrich:!0});const c=new Map;for(const a of e.flatMap(a=>a.result)){if(c.has(a.doc.href))continue;c.set(a.doc.href,a.doc)}if(suggestions.innerHTML="",suggestions.classList.remove('d-none'),c.size===0&&b){const a=document.createElement('div');a.innerHTML=`No results for "<strong>${b}</strong>"`,a.classList.add("suggestion__no-results"),suggestions.appendChild(a);return}for(const[h,g]of c){const b=document.createElement('div');suggestions.appendChild(b);const a=document.createElement('a');a.href=h,b.appendChild(a);const e=document.createElement('span');e.textContent=g.title,e.classList.add("suggestion__title"),a.appendChild(e);const f=document.createElement('span');if(f.textContent=g.description,f.classList.add("suggestion__description"),a.appendChild(f),suggestions.appendChild(b),suggestions.childElementCount==d)break}}})()